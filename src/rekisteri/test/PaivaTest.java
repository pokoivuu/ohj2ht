package rekisteri.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import rekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.20 14:23:13 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class PaivaTest {



  // Generated by ComTest BEGIN
  /** testToString213 */
  @Test
  public void testToString213() {    // Paiva: 213
    Paiva paiva = new Paiva(); 
    paiva.parse("   1  |  Lempäälä   | 12:00"); 
    assertEquals("From: Paiva line: 216", true, paiva.toString().startsWith("1|Lempäälä|12:00|")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse235 */
  @Test
  public void testParse235() {    // Paiva: 235
    Paiva paiva = new Paiva(); 
    paiva.parse("   1  |  Lempäälä   | 12:00"); 
    assertEquals("From: Paiva line: 238", 1, paiva.getTunnusNro()); 
    assertEquals("From: Paiva line: 239", true, paiva.toString().startsWith("1|Lempäälä|12:00|")); 
    paiva.rekisteroi(); 
    int n = paiva.getTunnusNro(); 
    paiva.parse(""+(n+5)); 
    paiva.rekisteroi(); 
    assertEquals("From: Paiva line: 245", n+5+1, paiva.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone265 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone265() throws CloneNotSupportedException {    // Paiva: 265
    Paiva paiva = new Paiva(); 
    paiva.parse("   1  |  Lempäälä   | 12:00"); 
    Paiva kopio = paiva.clone(); 
    assertEquals("From: Paiva line: 270", paiva.toString(), kopio.toString()); 
    paiva.parse("   2  |  Vihti   | 12:00"); 
    assertEquals("From: Paiva line: 272", false, kopio.toString().equals(paiva.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals290 */
  @Test
  public void testEquals290() {    // Paiva: 290
    Paiva paiva1 = new Paiva(); 
    paiva1.parse("   2  |  Lempäälä   | 12:00"); 
    Paiva paiva2 = new Paiva(); 
    paiva2.parse("   2  |  Lempäälä   | 12:00"); 
    Paiva paiva3 = new Paiva(); 
    paiva3.parse("   2  |  Lempäälä   | 12:01"); 
    assertEquals("From: Paiva line: 298", true, paiva1.equals(paiva2)); 
    assertEquals("From: Paiva line: 299", true, paiva2.equals(paiva1)); 
    assertEquals("From: Paiva line: 300", false, paiva1.equals(paiva3)); 
    assertEquals("From: Paiva line: 301", false, paiva3.equals(paiva2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi324 */
  @Test
  public void testRekisteroi324() {    // Paiva: 324
    Paiva maanantai1 = new Paiva(); 
    assertEquals("From: Paiva line: 326", 0, maanantai1.getTunnusNro()); 
    maanantai1.rekisteroi(); 
    Paiva maanantai2 = new Paiva(); 
    maanantai2.rekisteroi(); 
    int n1 = maanantai1.getTunnusNro(); 
    int n2 = maanantai2.getTunnusNro(); 
    assertEquals("From: Paiva line: 332", n2-1, n1); 
  } // Generated by ComTest END
}