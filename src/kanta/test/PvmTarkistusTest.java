package kanta.test;
// Generated by ComTest BEGIN
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.format.ResolverStyle;
import static org.junit.Assert.*;
import org.junit.*;
import static kanta.PvmTarkistus.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.22 16:42:06 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class PvmTarkistusTest {

private String tarkistaKello(String string) {
    if (string == null || "".equals(string.trim())) return "";
    if (!string.matches("(((0|1)[0-9])|(2[0-3])):[0-5][0-9]")) { return "Ei ole sopiva kellonaika."; }
    return null;   
}

private String tarkistaPvm(String pvm) {
    boolean sopii = false;
    try {
        LocalDate.parse(pvm, DateTimeFormatter.ofPattern("d.M.uuuu")
                .withResolverStyle(ResolverStyle.STRICT));
        sopii = true;
    } catch (DateTimeParseException e){
        //e.printStackTrace();
        sopii = false;
    }
    if (sopii == true) return null;      
    return "Väärä päivämäärämuoto.";
}



  // Generated by ComTest BEGIN
  /** testTarkistaPvm19 */
  @Test
  public void testTarkistaPvm19() {    // PvmTarkistus: 19
    assertEquals("From: PvmTarkistus line: 25", "Väärä päivämäärämuoto.", tarkistaPvm("koira")); 
    assertEquals("From: PvmTarkistus line: 26", "Väärä päivämäärämuoto.", tarkistaPvm("1.25.20")); 
    assertEquals("From: PvmTarkistus line: 27", "Väärä päivämäärämuoto.", tarkistaPvm("1.1.01")); 
    assertEquals("From: PvmTarkistus line: 28", "Väärä päivämäärämuoto.", tarkistaPvm("500.1.1990")); 
    assertEquals("From: PvmTarkistus line: 29", "Väärä päivämäärämuoto.", tarkistaPvm("1.1.50001")); 
    assertEquals("From: PvmTarkistus line: 30", null, tarkistaPvm("1.1.1990")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTarkistaKello51 */
  @Test
  public void testTarkistaKello51() {    // PvmTarkistus: 51
    assertEquals("From: PvmTarkistus line: 53", "Ei ole sopiva kellonaika.", tarkistaKello("koira")); 
    assertEquals("From: PvmTarkistus line: 54", "Ei ole sopiva kellonaika.", tarkistaKello("00:1")); 
    assertEquals("From: PvmTarkistus line: 55", "Ei ole sopiva kellonaika.", tarkistaKello("56:23")); 
    assertEquals("From: PvmTarkistus line: 56", "Ei ole sopiva kellonaika.", tarkistaKello("00:70")); 
    assertEquals("From: PvmTarkistus line: 57", "Ei ole sopiva kellonaika.", tarkistaKello("21:60")); 
    assertEquals("From: PvmTarkistus line: 58", null, tarkistaKello("00:00")); 
    assertEquals("From: PvmTarkistus line: 59", null, tarkistaKello("23:59")); 
  } // Generated by ComTest END
}